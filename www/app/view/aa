
select  sin((latitude-30.5090975) * 3.14 / 360) * sin((latitude-30.5090975) * 3.14 / 360) +
    cos(30.5090975 * 3.14 / 180 ) * cos(latitude * 3.14 / 180 ) * 
    sin((longitude-114.0) * 3.14/360) * sin((longitude-114.0) * 3.14/360),
  atan2(
sqrt( sin((latitude-30.5090975) * 3.14 / 360) * sin((latitude-30.5090975) * 3.14 / 360) +
    cos(30.5090975 * 3.14 / 180 ) * cos(latitude * 3.14 / 180 ) * 
    sin((longitude-114.0) * 3.14/360) * sin((longitude-114.0) * 3.14/360)),
 sqrt(1-(sin((latitude-30.5090975) * 3.14 / 360) * sin((latitude-30.5090975) * 3.14 / 360) +
    cos(30.5090975 * 3.14 / 180 ) * cos(latitude * 3.14 / 180 ) * sin((longitude-114.0) * 3.14/360) * sin(longitude-114.0) * 3.14/360)
    )) from users




    function distance(lat1,lon1,lat2,lon2) {
  var R = 6371; // km (change this constant to get miles)
  var dLat = (lat2-lat1) * Math.PI / 180;
  var dLon = (lon2-lon1) * Math.PI / 180; 
  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
    Math.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) * 
    Math.sin(dLon/2) * Math.sin(dLon/2); 
  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
  var d = R * c;

  return d;
}



    function distance(lat1,lon1,lat2,lon2) {

  var dLat = (lat2-lat1) * Math.PI / 180;
  var dLon = (lon2-lon1) * Math.PI / 180; 
  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
    Math.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) * 
    Math.sin(dLon/2) * Math.sin(dLon/2); 
    console.log(Math.sin(dLat/2) * Math.sin(dLat/2))
console.log(Math.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) * 
    Math.sin(dLon/2) * Math.sin(dLon/2))
    console.log(a)
}